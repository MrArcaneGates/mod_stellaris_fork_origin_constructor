# 00_other_jobs
fotd_protectors = {
	is_capped_by_modifier = no
	category = worker
	building_icon = building_fortress
	icon = enforcer
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
	}

	possible = {
		owner = {
			is_primitive = yes
			is_origin_fotd = yes
		}
	}

	resources = {
	}

	planet_modifier = {
		planet_crime_add = -5
		planet_stability_add = 2
	}
	pop_modifier = {
		pop_defense_armies_add = 1
	}

	weight = {
		weight = 0.1

		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}
# 02_specialist_jobs
necro_apprentice = {
	category = specialist
	exempt_from_ai_amenity_prioritization = yes
	condition_string = NECRO_APPRENTICE_JOB_TRIGGER
	building_icon = building_chamber_of_elevation_1
	clothes_texture_index = 3
	icon = apprentice

	desc = { #Note: planet-scope
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = job_necro_apprentice_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = job_necro_apprentice_desc_hive
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = { #deliberately allows slaves!
		species = { species_can_be_necrophaged = yes }
		owner = {
			has_trait = trait_necrophage
			is_origin_necrophage = yes
		}
	}

	resources = {
		category = planet_necro_apprentices
		produces = {
			unity = 1.5
		}
		#Note: Hive Empires don't need to pay consumer goods, they pay double the food instead
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = no }
			}
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			energy = @living_standard_energy_normal
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight #deliberate
		mult = value:job_weights_modifier|JOB|necro_apprentice|RESOURCE|unity|FACTOR|0.5|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.75
			is_enslaved = yes #willing apprentices first, please
		}
		modifier = {
			factor = 0.75
			pop_has_happiness = no
		}
		modifier = {
			factor = 0.1
			exists = owner
			owner = { is_ai = yes }
			exists = planet
			planet = {
				NOT = {
					any_owned_pop = {
						NOT = { is_same_value = root }
						NOT = { has_job = necro_apprentice }
						species = { species_can_be_necrophaged = yes }
					}
				}
			}
		}
	}
}
# 04_gestalt_jobs
spawning_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_spawning_pool

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			can_assemble_hive_pop = yes
		}
		modifier = {
			planet_pop_assembly_organic_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_origin_necrophage = yes }
			exists = planet.growing_species
			planet.growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		modifier = {
			pop_growth_speed = 0.1
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 5
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 5
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}
offspring_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_offspring_nest
	icon = spawning_drone
	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	planet_modifier = {
		planet_jobs_simple_drone_produces_mult = 0.1

	}

	triggered_planet_modifier = {
		potential = {
			can_assemble_hive_pop = yes
		}
		modifier = {
			planet_pop_assembly_organic_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_origin_necrophage = yes }
			exists = planet.growing_species
			planet.growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		modifier = {
			pop_growth_speed = 0.1
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 5
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 5
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}